name: Flutter - Analyze & Test

on:
  workflow_call:
    inputs:
      flutter_version:
        description: 'The Flutter used (ex: 2.5.1)'
        required: true
        type: string
    secrets:
      passphrase:
        description: 'The passphrase to decrypt the configuration'
        required: true


jobs:
  analyze:
    name: 'Analyze'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3
      - name: 'Setup flutter action'
        uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: ${{ inputs.flutter_version }}
      - name: 'Flutter analyze'
        run: flutter analyze lib
  format:
    name: 'Format'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3
      - name: 'Setup flutter action'
        uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: ${{ inputs.flutter_version }}
      - name: 'Flutter format'
        run: dart format lib --set-exit-if-changed
  code-metrics:
    name: 'Code metrics'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3
      - name: 'Setup flutter action'
        uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: ${{ inputs.flutter_version }}
      - name: 'Get dependencies'
        run: flutter pub get
      - name: '[Global] Code metrics'
        run: dart run dart_code_metrics:metrics analyze --fatal-style --fatal-warnings --fatal-performance --reporter=github lib
      - name: '[Unused files] Code metrics'
        run: dart run dart_code_metrics:metrics check-unused-files lib
      - name: '[Unused code] Code metrics'
        run: dart run dart_code_metrics:metrics check-unused-code lib
  test:
    name: 'Test'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v3
      - name: 'Decrypt secret configuration'
        run: ./.github/scripts/decrypt_secret.sh
        env:
          PASSPHRASE: ${{ secrets.passphrase }}
      - name: 'Check secret configuration'
        run: ./.github/scripts/check_secrets_decryption.sh
      - name: 'Setup flutter action'
        uses: subosito/flutter-action@v2.10.0
        with:
          flutter-version: ${{ inputs.flutter_version }}
      - name: 'Flutter test (with coverage)'
        run: flutter test -r github --coverage --test-randomize-ordering-seed random
      - name: 'Upload coverage report'
        uses: codecov/codecov-action@v3.1.4
        with:
          token: ${{ secrets.CODECOV_TOKEN }}
          directory: ./coverage/