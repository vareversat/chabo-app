name: Flutter - Build

on:
  workflow_call:
    inputs:
      flutter_version:
        description: 'The Flutter used (ex: 2.5.1)'
        required: true
        type: string
      android_output:
        description: 'Android build file type output (apk or abb)'
        required: true
        type: string
      env:
        description: 'Environment in which the application will be build'
        required: true
        type: string


jobs:
  Android:
    name: 'Android (${{ inputs.android_output }})'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: 'Decrypt secret configuration'
        run: ./.github/scripts/decrypt_secret.sh
        env:
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: 'Check secret configuration'
        run: ./.github/scripts/check_secrets_decryption.sh
      - name: 'Set up JAVA'
        uses: actions/setup-java@v4
        with:
          distribution: 'zulu'
          java-version: '17.x'
      - name: 'Setup Flutter'
        uses: subosito/flutter-action@v2.16.0
        with:
          flutter-version: ${{ inputs.flutter_version }}
      - name: 'Generate build number'
        run: |
          BUILD_NUMBER=$(date +%s)
          BUILD_NAME=$(git describe --abbrev=0 --tags)
          echo "BUILD_NUMBER=$BUILD_NUMBER" >> $GITHUB_ENV
          echo "BUILD_NAME=$BUILD_NAME" >> $GITHUB_ENV
          echo "This build is tagged as $BUILD_NAME+$BUILD_NUMBER on $GITHUB_REF"
      - name: 'Build Android APK'
        if: ${{ inputs.android_output == 'apk' }}
        run: flutter build apk --build-name="$BUILD_NAME" --build-number="$BUILD_NUMBER" --split-per-abi
        env:
          BUILD_NUMBER: ${{ env.BUILD_NUMBER }}
          BUILD_NAME: ${{ env.BUILD_NAME }}
          ENV: ${{ inputs.env }}
      - name: 'Save APK'
        if: ${{ inputs.android_output == 'apk' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'apk-build'
          path: build/app/outputs/apk/release/app-arm64-v8a-release.apk
      - name: 'Build Android App Bundle'
        if: ${{ inputs.android_output == 'aab' }}
        run: flutter build appbundle --build-name="$BUILD_NAME" --build-number="$BUILD_NUMBER" --dart-define=SENTRY_DSN="$SENTRY_DSN" --dart-define=ENV="$ENV"
        env:
          BUILD_NUMBER: ${{ env.BUILD_NUMBER }}
          BUILD_NAME: ${{ env.BUILD_NAME }}
          SENTRY_DSN: ${{ secrets.SENTRY_DSN }}
          ENV: ${{ inputs.env }}
      - name: 'Save AAB'
        if: ${{ inputs.android_output == 'aab' }}
        uses: actions/upload-artifact@v4
        with:
          name: 'aab-build'
          path: build/app/outputs/bundle/release/app-release.aab
  build_ios:
    name: 'iOS'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v4
      - name: 'Decrypt secret configuration'
        run: ./.github/scripts/decrypt_secret.sh
        env:
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: 'Check secret configuration'
        run: ./.github/scripts/check_secrets_decryption.sh
      - name: 'ðŸ¥º'
        run: echo 'WIP'
  build_web:
    name: 'WEB'
    runs-on: ubuntu-latest
    steps:
      - name: 'Checkout source code'
        uses: actions/checkout@v4
      - name: 'Decrypt secret configuration'
        run: ./.github/scripts/decrypt_secret.sh
        env:
          PASSPHRASE: ${{ secrets.PASSPHRASE }}
      - name: 'Check secret configuration'
        run: ./.github/scripts/check_secrets_decryption.sh
      - name: 'ðŸ¥º'
        run: echo 'WIP'
